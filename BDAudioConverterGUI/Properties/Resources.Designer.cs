//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BDAudioConverterGUI.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("BDAudioConverterGUI.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MONO is the default mode for mono input files.
        ///If input is a stereo signal, the two channels will be averaged into a mono signal.
        ///
        ///FORCED L/R STEREO encodes the left and the right signals independently,
        ///and gives more or less bits to each, depending on the currently available.
        ///
        ///JOINT STEREO is the default mode of encoding. jstereo means the encoder
        ///can use (on a frame by frame basis) either L/R stereo or mid/side stereo.
        ///In mid/side stereo, the mid (L+R) and side (L-R) channels are encoded,
        ///and mor [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string comboBoxMP3OptionsChannelModesToolTip {
            get {
                return ResourceManager.GetString("comboBoxMP3OptionsChannelModesToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The encoder determines the best combination of
        ///exponent strategies for a frame by searching through
        ///a list of pre-defined exponent strategies.  This option
        ///controls the size of the list to be searched.  The
        ///value can range from 1 (lower quality but faster) to
        ///32 (higher quality but slower).  The default value is 8..
        /// </summary>
        internal static string groupBoxAC3ExponentStrategySearchSizeToolTip {
            get {
                return ResourceManager.GetString("groupBoxAC3ExponentStrategySearchSizeToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The dialog normalization value sets the average dialog
        ///level.  The value is typically constant for a particular
        ///audio program.  The decoder has a target output dialog
        ///level of -31dB, so if the dialog level is specified as
        ///being -31dB already (default), the output volume is not
        ///altered.  Otherwise, the overall output volume is
        ///decreased so that the dialog level is adjusted down to -31dB.
        ///(Source: &quot;aften.exe --longhelp&quot;).
        /// </summary>
        internal static string labelAC3DialogNormalizationToolTip {
            get {
                return ResourceManager.GetString("labelAC3DialogNormalizationToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The dialog normalization value sets the average dialog
        ///level.  The value is typically constant for a particular
        ///audio program.  The decoder has a target output dialog
        ///level of -31dB, so if the dialog level is specified as
        ///being -31dB already (default), the output volume is not
        ///altered.  Otherwise, the overall output volume is
        ///decreased so that the dialog level is adjusted down to -31dB.
        ///(Source: &quot;aften.exe --longhelp&quot;).
        /// </summary>
        internal static string labelAC3DynamicRangeToolTip {
            get {
                return ResourceManager.GetString("labelAC3DynamicRangeToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If you want to get a higher pitch, so use (+) bevore the value like &quot;+0.1&quot;, &quot;+8.32&quot; etc.
        ///Or use (-) for a deeper pitch like &quot;-0.1&quot;, &quot;-8.32&quot; etc.
        ///
        ///To correct the deep audiostreams on some German released BluRays use a value of +4.17..
        /// </summary>
        internal static string textBoxSoXSettingsPitchToolTip {
            get {
                return ResourceManager.GetString("textBoxSoXSettingsPitchToolTip", resourceCulture);
            }
        }
    }
}
